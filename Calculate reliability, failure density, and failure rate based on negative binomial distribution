import numpy as np
import scipy.stats as stats
import matplotlib.pyplot as plt

# 負の二項分布 (Negative Binomial Distribution) の計算 / Calculation for Negative Binomial Distribution
def negative_binomial_distribution(r, p):
    """
    負の二項分布に基づく信頼性解析 / Reliability analysis based on negative binomial distribution

    r: 成功するまでの故障回数 / Number of failures until r successes
    p: 成功確率 / Probability of success (on each trial)

    returns: t (時間), f_t (故障密度関数), R_t (信頼度), h_t (故障率), mean_life (平均寿命)
    """
    t = np.arange(1, 21)  # 時間の範囲 / Time range (1, 2, ..., 20)

    # 故障密度関数 / Failure density function (PMF)
    f_t = stats.nbinom.pmf(t, r, p)
    
    # 信頼度関数 / Reliability function
    R_t = stats.nbinom.sf(t, r, p)
    
    # 故障率 / Failure rate
    h_t = f_t / (R_t + f_t)  # R_t + f_t はまだ故障していない部分 / Remaining portion not failed yet
    
    # 平均寿命 / Mean life (Mean of negative binomial)
    mean_life = r * (1 - p) / p  # 平均寿命の計算 / Calculation of mean life
    
    return t, f_t, R_t, h_t, mean_life

# プロット関数 / Function to plot the results
def plot_distribution(t, f_t, R_t, h_t, mean_life, title):
    """
    プロット結果を表示する関数 / Function to plot the results of the distribution
    
    t: 時間 / Time
    f_t: 故障密度関数 / Failure density function
    R_t: 信頼度 / Reliability function
    h_t: 故障率 / Failure rate
    mean_life: 平均寿命 / Mean life
    title: プロットのタイトル / Title for the plot
    """
    plt.figure(figsize=(12, 8))
    
    # 故障密度関数 / Failure density function
    plt.subplot(2, 2, 1)
    plt.stem(t, f_t, use_line_collection=True)
    plt.title(f"{title} - Failure Density Function")
    plt.xlabel("Time")
    plt.ylabel("f(t)")
    plt.grid(True)
    
    # 信頼度 / Reliability function
    plt.subplot(2, 2, 2)
    plt.stem(t, R_t, use_line_collection=True)
    plt.title(f"{title} - Reliability Function")
    plt.xlabel("Time")
    plt.ylabel("R(t)")
    plt.grid(True)
    
    # 故障率 / Failure rate
    plt.subplot(2, 2, 3)
    plt.stem(t, h_t, use_line_collection=True)
    plt.title(f"{title} - Failure Rate")
    plt.xlabel("Time")
    plt.ylabel("h(t)")
    plt.grid(True)
    
    # 平均寿命 / Mean life
    plt.subplot(2, 2, 4)
    plt.axhline(y=mean_life, color='r', linestyle='--', label="Mean Life")
    plt.title(f"{title} - Mean Life: {mean_life:.2f}")
    plt.xlabel("Time")
    plt.ylabel("Mean Life")
    plt.grid(True)
    
    plt.tight_layout()
    plt.show()

# サンプルの実行例 / Example of execution

# パラメータの設定 / Set parameters
r = 5  # 故障の回数 / Number of failures
p = 0.4  # 成功確率 / Probability of success

# 負の二項分布に基づく信頼度、故障密度関数、故障率の計算 / Calculate reliability, failure density, and failure rate based on negative binomial distribution
t, f_t, R_t, h_t, mean_life = negative_binomial_distribution(r, p)

# 結果をプロット / Plot the results
plot_distribution(t, f_t, R_t, h_t, mean_life, "Negative Binomial Distribution")
