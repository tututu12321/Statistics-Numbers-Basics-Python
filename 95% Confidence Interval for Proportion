import numpy as np
import scipy.stats as stats

# サンプルデータ (Sample Data)
# ここではバイナリデータ (0 = 失敗, 1 = 成功) を使用
data = np.random.choice([0, 1], size=100, p=[0.4, 0.6])  # 0が40%, 1が60%の確率で100個のデータを生成

# 標本比率 (Sample Proportion)
sample_size = len(data)
sample_proportion = np.mean(data)

# 母比率 (Population Proportion)
# 母集団の比率が既知の場合に使用。ここでは母比率60%と仮定。
population_proportion = 0.6

# 信頼区間95% (95% Confidence Interval for Proportion)
confidence_level = 0.95
alpha = 1 - confidence_level
z_value = stats.norm.ppf(1 - alpha / 2)  # 正規分布のZ値 (95%信頼度)

# 標準誤差 (Standard Error for Proportion)
standard_error_proportion = np.sqrt((sample_proportion * (1 - sample_proportion)) / sample_size)

# 信頼区間の計算 (Calculating Confidence Interval for Proportion)
margin_of_error = z_value * standard_error_proportion
confidence_interval_proportion = (sample_proportion - margin_of_error, sample_proportion + margin_of_error)

# 平均値 (Mean)
mean_value = np.mean(data)

# 分散 (Variance)
variance_value = np.var(data, ddof=1)  # 標本分散

# 標準偏差 (Standard Deviation)
std_dev_value = np.std(data, ddof=1)

# 結果を表示 (Display Results)
print(f"Sample Size: {sample_size}")
print(f"Sample Proportion (標本比率): {sample_proportion}")
print(f"Population Proportion (母比率, assumed): {population_proportion}")
print(f"95% Confidence Interval for Proportion (信頼区間): {confidence_interval_proportion}")
print(f"Mean (平均値): {mean_value}")
print(f"Variance (分散): {variance_value}")
print(f"Standard Deviation (標準偏差): {std_dev_value}")

