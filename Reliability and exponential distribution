import numpy as np
import matplotlib.pyplot as plt

# 定数の設定 (Setting constants)
lambda_value = 0.1  # 故障率 (Failure rate)
n = 1000  # サンプルサイズ (Sample size)
time_points = np.linspace(0, 50, n)  # 時間のポイント (Time points)

# 確率密度関数 f(t) の計算 (Calculating Probability Density Function f(t))
def f(t):
    return lambda_value * np.exp(-lambda_value * t)  # f(t) = λe^(-λt)

# 信頼度関数 R(t) の計算 (Calculating Reliability Function R(t))
def R(t):
    return np.exp(-lambda_value * t)  # R(t) = e^(-λt)

# 平均故障時間 MTTF の計算 (Calculating Mean Time To Failure MTTF)
MTTF = 1 / lambda_value  # MTTF = 1 / λ

# 結果の表示 (Displaying results)
print(f"故障率 (Failure Rate): λ = {lambda_value}")
print(f"平均故障時間 (Mean Time To Failure): {MTTF}")

# プロットの設定 (Setting up the plot)
plt.figure(figsize=(12, 6))

# 確率密度関数 f(t) のプロット (Plotting Probability Density Function f(t))
plt.subplot(1, 2, 1)
plt.plot(time_points, f(time_points), label='f(t)', color='blue')
plt.title('Probability Density Function f(t)', fontsize=16)  # Title in English
plt.xlabel('Time', fontsize=14)  # X-axis label in English
plt.ylabel('Density', fontsize=14)  # Y-axis label in English
plt.grid()
plt.legend()

# 信頼度関数 R(t) のプロット (Plotting Reliability Function R(t))
plt.subplot(1, 2, 2)
plt.plot(time_points, R(time_points), label='R(t)', color='green')
plt.title('Reliability Function R(t)', fontsize=16)  # Title in English
plt.xlabel('Time', fontsize=14)  # X-axis label in English
plt.ylabel('Reliability', fontsize=14)  # Y-axis label in English
plt.grid()
plt.legend()

plt.tight_layout()  # Layout adjustment
plt.show()  # プロットを表示
