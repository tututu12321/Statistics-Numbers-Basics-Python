import numpy as np
import pandas as pd
from scipy import stats
import matplotlib.pyplot as plt
import seaborn as sns

# Setting style for seaborn
# Seabornのスタイルを設定
sns.set(style='whitegrid')

# 1. Creating sample datasets for each hypothesis test
# 1. 仮説検定用のサンプルデータを作成

# For t-test: two independent samples
# t検定のための2つの独立したサンプル
group1 = [20, 22, 19, 24, 21, 23, 22, 21]
group2 = [30, 31, 29, 32, 35, 33, 30, 34]

# For chi-squared test: observed and expected frequencies
# カイ二乗検定用の観測値と期待値の頻度
observed = np.array([50, 30, 20])  # 観測頻度
expected = np.array([40, 40, 20])  # 期待頻度

# For ANOVA: multiple groups with different means
# ANOVA（分散分析）のための異なる平均を持つ複数のグループ
group_A = [23, 24, 22, 25, 26, 23, 24]
group_B = [30, 32, 29, 28, 31, 30, 29]
group_C = [40, 42, 41, 39, 40, 41, 43]

# 2. Performing Hypothesis Tests
# 2. 仮説検定の実施

# 2.1 t-test (Independent two-sample t-test)
# 2.1 t検定（独立した2サンプルのt検定）
t_stat, p_value_ttest = stats.ttest_ind(group1, group2)
print("t-test Results:")  # t検定の結果を表示
print(f"t-statistic: {t_stat:.4f}, p-value: {p_value_ttest:.4f}")
print("Reject H₀" if p_value_ttest < 0.05 else "Fail to Reject H₀")  # 帰無仮説の棄却判定

# 2.2 Chi-squared test
# 2.2 カイ二乗検定
chi2_stat, p_value_chi2 = stats.chisquare(observed, f_exp=expected)
print("\nChi-squared Test Results:")  # カイ二乗検定の結果を表示
print(f"Chi-squared statistic: {chi2_stat:.4f}, p-value: {p_value_chi2:.4f}")
print("Reject H₀" if p_value_chi2 < 0.05 else "Fail to Reject H₀")  # 帰無仮説の棄却判定

# 2.3 ANOVA (One-way ANOVA test)
# 2.3 ANOVA（1元配置分散分析）
f_stat, p_value_anova = stats.f_oneway(group_A, group_B, group_C)
print("\nANOVA Results:")  # ANOVAの結果を表示
print(f"F-statistic: {f_stat:.4f}, p-value: {p_value_anova:.4f}")
print("Reject H₀" if p_value_anova < 0.05 else "Fail to Reject H₀")  # 帰無仮説の棄却判定

# 3. Visualization
# 3. 可視化

# 3.1 Visualization of t-test results using boxplots
# 3.1 t検定結果の可視化（ボックスプロットを使用）
plt.figure(figsize=(10, 5))
plt.subplot(1, 3, 1)
sns.boxplot(data=[group1, group2], palette="Set3")
plt.title(f"t-test\np-value: {p_value_ttest:.4f}")
plt.xticks([0, 1], ['Group 1', 'Group 2'])  # x軸ラベルの設定
plt.ylabel('Values')  # y軸ラベルの設定
plt.grid(True)

# 3.2 Visualization of Chi-squared test results using bar plot
# 3.2 カイ二乗検定結果の可視化（棒グラフを使用）
plt.subplot(1, 3, 2)
categories = ['Category 1', 'Category 2', 'Category 3']  # カテゴリーの設定
x = np.arange(len(categories))  # ラベル位置の設定
width = 0.35  # 棒の幅

# Bar plot of observed and expected values
# 観測値と期待値の棒グラフ
plt.bar(x - width/2, observed, width, label='Observed', color='skyblue')
plt.bar(x + width/2, expected, width, label='Expected', color='orange')
plt.title(f"Chi-squared Test\np-value: {p_value_chi2:.4f}")
plt.xticks(x, categories)  # x軸ラベルを設定
plt.ylabel('Frequency')  # y軸ラベルを設定
plt.legend()  # 凡例を表示
plt.grid(True)

# 3.3 Visualization of ANOVA results using boxplot
# 3.3 ANOVA結果の可視化（ボックスプロットを使用）
plt.subplot(1, 3, 3)
sns.boxplot(data=[group_A, group_B, group_C], palette="Set2")
plt.title(f"ANOVA\np-value: {p_value_anova:.4f}")
plt.xticks([0, 1, 2], ['Group A', 'Group B', 'Group C'])  # x軸ラベルを設定
plt.ylabel('Values')  # y軸ラベルを設定
plt.grid(True)

# Show all plots
# すべてのプロットを表示
plt.tight_layout()
plt.show()
